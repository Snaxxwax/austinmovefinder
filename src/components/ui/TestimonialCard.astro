---
export interface Props {
  name: string;
  location: string;
  rating: number;
  text: string;
  avatar?: string;
  date?: string;
}

const { name, location, rating, text, avatar, date } = Astro.props;
---

<div class="testimonial-card">
  <div class="testimonial-header">
    <div class="testimonial-avatar">
      {avatar ? (
        <img src={avatar} alt={name} loading="lazy" />
      ) : (
        <div class="avatar-placeholder">{name.charAt(0)}</div>
      )}
    </div>
    <div class="testimonial-info">
      <h4 class="testimonial-name">{name}</h4>
      <p class="testimonial-location">{location}</p>
    </div>
    <div class="testimonial-rating">
      {Array.from({ length: 5 }).map((_, i) => (
        <span class={`star ${i < rating ? 'filled' : ''}`}>â˜…</span>
      ))}
    </div>
  </div>
  <div class="testimonial-content">
    <p class="testimonial-text">"{text}"</p>
    {date && <p class="testimonial-date">{date}</p>}
  </div>
</div>

<style>
  .testimonial-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(0, 0, 0, 0.05);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .testimonial-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  .testimonial-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .testimonial-avatar {
    flex-shrink: 0;
  }

  .testimonial-avatar img,
  .avatar-placeholder {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
  }

  .avatar-placeholder {
    background: var(--accent-color);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .testimonial-info {
    flex-grow: 1;
  }

  .testimonial-name {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--primary-color);
  }

  .testimonial-location {
    margin: 0.25rem 0 0;
    font-size: 0.9rem;
    color: var(--medium-gray);
  }

  .testimonial-rating {
    display: flex;
    gap: 2px;
  }

  .star {
    color: #ddd;
    font-size: 1.2rem;
    transition: all 0.2s ease;
  }

  .star.filled {
    color: var(--accent-color);
  }

  .testimonial-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .testimonial-text {
    color: var(--text-color);
    line-height: 1.6;
    font-size: 0.95rem;
    font-style: italic;
    margin: 0 0 1rem 0;
    flex-grow: 1;
  }

  .testimonial-date {
    margin: 0;
    font-size: 0.85rem;
    color: var(--medium-gray);
    text-align: right;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .testimonial-card {
      padding: 1.5rem;
    }

    .testimonial-header {
      flex-wrap: wrap;
    }

    .testimonial-rating {
      width: 100%;
      margin-top: 0.5rem;
    }
  }
</style>