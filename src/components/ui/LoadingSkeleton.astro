---
export interface Props {
  type?: 'text' | 'card' | 'form' | 'hero';
  count?: number;
}

const { type = 'text', count = 1 } = Astro.props;
---

<div class="skeleton-container">
  {Array.from({ length: count }).map(() => (
    <div class={`skeleton skeleton-${type}`}>
      {type === 'card' && (
        <>
          <div class="skeleton-image"></div>
          <div class="skeleton-content">
            <div class="skeleton-line skeleton-title"></div>
            <div class="skeleton-line"></div>
            <div class="skeleton-line skeleton-short"></div>
          </div>
        </>
      )}
      {type === 'form' && (
        <>
          <div class="skeleton-line skeleton-label"></div>
          <div class="skeleton-input"></div>
          <div class="skeleton-line skeleton-label"></div>
          <div class="skeleton-input"></div>
        </>
      )}
      {type === 'hero' && (
        <div class="skeleton-hero">
          <div class="skeleton-line skeleton-hero-title"></div>
          <div class="skeleton-line skeleton-hero-subtitle"></div>
          <div class="skeleton-button"></div>
        </div>
      )}
      {type === 'text' && (
        <>
          <div class="skeleton-line"></div>
          <div class="skeleton-line"></div>
          <div class="skeleton-line skeleton-short"></div>
        </>
      )}
    </div>
  ))}
</div>

<style>
  .skeleton-container {
    width: 100%;
  }

  .skeleton {
    animation: pulse 1.5s ease-in-out infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  /* Card Skeleton */
  .skeleton-card {
    background: white;
    border-radius: 10px;
    padding: 0;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    margin-bottom: 1rem;
  }

  .skeleton-image {
    width: 100%;
    height: 200px;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  .skeleton-content {
    padding: 1.5rem;
  }

  /* Form Skeleton */
  .skeleton-form {
    padding: 1rem 0;
  }

  .skeleton-label {
    width: 30%;
    height: 16px;
    margin-bottom: 0.5rem;
  }

  .skeleton-input {
    width: 100%;
    height: 48px;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: 5px;
    margin-bottom: 1.5rem;
  }

  /* Hero Skeleton */
  .skeleton-hero {
    text-align: center;
    padding: 4rem 0;
  }

  .skeleton-hero-title {
    width: 60%;
    height: 40px;
    margin: 0 auto 1rem;
  }

  .skeleton-hero-subtitle {
    width: 40%;
    height: 24px;
    margin: 0 auto 2rem;
  }

  .skeleton-button {
    width: 200px;
    height: 48px;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: 5px;
    margin: 0 auto;
  }

  /* Text Skeleton */
  .skeleton-line {
    height: 16px;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
    border-radius: 4px;
    margin-bottom: 0.75rem;
  }

  .skeleton-title {
    height: 24px;
    width: 70%;
    margin-bottom: 1rem;
  }

  .skeleton-short {
    width: 50%;
  }

  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .skeleton-hero-title {
      width: 80%;
    }

    .skeleton-hero-subtitle {
      width: 60%;
    }
  }
</style>