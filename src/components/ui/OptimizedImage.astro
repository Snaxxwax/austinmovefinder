---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  sizes?: string;
  widths?: number[];
  quality?: number;
  format?: 'webp' | 'avif' | 'png' | 'jpeg';
  fallbackFormat?: 'png' | 'jpeg';
  priority?: boolean;
}

const {
  src,
  alt,
  width,
  height,
  class: className,
  loading = 'lazy',
  decoding = 'async',
  sizes,
  widths = [480, 768, 1024, 1280],
  quality = 80,
  format = 'webp',
  fallbackFormat = 'jpeg',
  priority = false,
  ...rest
} = Astro.props;

// Generate WebP and fallback image paths
const webpSrc = src.replace(/\.(png|jpg|jpeg)$/i, '.webp');
const fallbackSrc = src;

// Responsive sizes for better performance
const responsiveSizes = sizes || '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw';
---

<picture>
  <!-- WebP source for modern browsers -->
  <source
    srcset={webpSrc}
    type="image/webp"
    sizes={responsiveSizes}
  />
  <!-- Fallback for browsers that don't support WebP -->
  <img
    src={fallbackSrc}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={priority ? 'eager' : loading}
    decoding={decoding}
    sizes={responsiveSizes}
    {...rest}
  />
</picture>

<style>
  img, picture {
    max-width: 100%;
    height: auto;
  }
</style>