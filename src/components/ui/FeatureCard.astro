---
export interface Props {
  icon: string;
  title: string;
  description: string;
  iconAlt?: string;
}

const { icon, title, description, iconAlt = title } = Astro.props;
---

<div class="feature-item">
  <picture>
    <source srcset={icon.replace(/\.(png|jpg|jpeg)$/, '.webp')} type="image/webp">
    <img
      src={icon}
      alt={iconAlt}
      class="feature-icon"
      loading="lazy"
      decoding="async"
      width="90"
      height="90"
    >
  </picture>
  <h3>{title}</h3>
  <p>{description}</p>
</div>

<style>
  .feature-item {
    flex-basis: 280px;
    flex-grow: 1;
    max-width: 350px;
    text-align: center;
    padding: 2.5rem 2rem;
    border-radius: 10px;
    background: #fff;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(0, 0, 0, 0.05);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
    contain: layout style paint;
  }

  .feature-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  .feature-icon {
    width: 90px;
    height: 90px;
    object-fit: contain;
    margin-bottom: 1.5rem;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
  }

  .feature-item:hover .feature-icon {
    transform: scale(1.1) translateZ(0);
  }

  .feature-item h3 {
    font-family: var(--heading-font);
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--primary-color);
  }

  .feature-item p {
    color: var(--text-color);
    line-height: 1.6;
    margin: 0;
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .feature-item {
      max-width: 280px;
      padding: 1rem;
    }

    .feature-icon {
      max-height: 60px;
    }

    .feature-item h3 {
      font-size: 1.1rem;
    }

    .feature-item p {
      font-size: 0.95rem;
    }
  }
</style>